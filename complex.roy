type Complex = { real: Number, imag: Number }

// (x + yi)(u + vi) = (xu â€“ yv) + (xv + yu)i.

let multiply_complex (a: Complex) (b: Complex) = 
    {
        real: (a.real * b.real) - (a.imag * b.imag)
        imag: (a.real * b.imag) + (a.imag * b.real)
    }

let add_complex (a: Complex) (b: Complex) = 
    {
        real: a.real + b.real
        imag: a.imag + b.imag 
    }

let mag_complex (a: Complex) = (a.real * a.real) + (a.imag * a.imag)
